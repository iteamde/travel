<?php

use App\Models\ActivityMedia\Media;
use App\Models\Place\PlaceMedias;

/**
 * Global helpers file with misc functions.
 */
if (!function_exists('app_name')) {

    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function app_name() {
        return config('app.name');
    }

}

if (!function_exists('access')) {

    /**
     * Access (lol) the Access:: facade as a simple function.
     */
    function access() {
        return app('access');
    }

}

if (!function_exists('history')) {

    /**
     * Access the history facade anywhere.
     */
    function history() {
        return app('history');
    }

}

if (!function_exists('gravatar')) {

    /**
     * Access the gravatar helper.
     */
    function gravatar() {
        return app('gravatar');
    }

}

if (!function_exists('includeRouteFiles')) {

    /**
     * Loops through a folder and requires all PHP files
     * Searches sub-directories as well.
     *
     * @param $folder
     */
    function includeRouteFiles($folder) {
        try {
            $rdi = new recursiveDirectoryIterator($folder);
            $it = new recursiveIteratorIterator($rdi);

            while ($it->valid()) {
                if (!$it->isDot() && $it->isFile() && $it->isReadable() && $it->current()->getExtension() === 'php') {
                    require $it->key();
                }

                $it->next();
            }
        } catch (Exception $e) {
            echo $e->getMessage();
        }
    }

}

if (!function_exists('getRtlCss')) {

    /**
     * The path being passed is generated by Laravel Mix manifest file
     * The webpack plugin takes the css filenames and appends rtl before the .css extension
     * So we take the original and place that in and send back the path.
     *
     * @param $path
     *
     * @return string
     */
    function getRtlCss($path) {
        $path = explode('/', $path);
        $filename = end($path);
        array_pop($path);
        $filename = rtrim($filename, '.css');

        return implode('/', $path) . '/' . $filename . '.rtl.css';
    }

}

function getPlacesMediaPerCities($page) {
    $skip = $page*5;
    $places_without_media = \App\Models\Place\Place::whereNull('media_done')
            ->orderBy('id', 'ASC')
            ->skip($skip)
            ->take(5)
            ->get();

    foreach ($places_without_media AS $pwm) {
        if (time() % 6 == 0) {
            $json = file_get_contents('http://db.travooo.com/public/places/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 1) {
            $json = file_get_contents('http://db.travooodev.com/public/places/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 2) {
            $json = file_get_contents('http://db.travoooapi.com/public/places/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 3) {
            $json = file_get_contents('http://db.travoooapi.net/public/places/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 4) {
            $json = file_get_contents('http://db2.travoooapi.net/public/places/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 5) {
            $json = file_get_contents('http://db2.travoooapi.com/public/places/media/go/' . $pwm->provider_id);
        }

        $photos = unserialize($json);

        echo $pwm->provider_id . ' ';
        if (is_array($photos)) {
            foreach ($photos AS $p) {
                $media_file = 'places_media/' . $pwm->provider_id . '/' . sha1(microtime()) . '.jpg';
                Storage::disk('s3')->put($media_file, $p, 'public');

                $media = new Media;
                $media->url = $media_file;
                $media->save();

                $place_media = new PlaceMedias;
                $place_media->places_id = $pwm->id;
                $place_media->medias_id = $media->id;
                $place_media->save();
            }
            echo count($photos);
        }
        echo '<br />';

        $pwm->media_done = 1;
        $pwm->save();
    }
}

function getHotelsMediaPerCities() {
    $places_without_media = \App\Models\Hotels\Hotels::whereNull('media_done')
            ->orderBy('id', 'ASC')
            ->take(5)
            ->get();

    foreach ($places_without_media AS $pwm) {
        if (time() % 6 == 0) {
            $json = file_get_contents('http://db.travooo.com/public/hotels/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 1) {
            $json = file_get_contents('http://db.travooodev.com/public/hotels/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 2) {
            $json = file_get_contents('http://db.travoooapi.com/public/hotels/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 3) {
            $json = file_get_contents('http://db.travoooapi.net/public/hotels/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 4) {
            $json = file_get_contents('http://db2.travoooapi.net/public/hotels/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 5) {
            $json = file_get_contents('http://db2.travoooapi.com/public/hotels/media/go/' . $pwm->provider_id);
        }

        $photos = unserialize($json);

        echo $pwm->provider_id . ' ';
        if (is_array($photos)) {
            foreach ($photos AS $p) {
                $media_file = 'hotels_media/' . $pwm->provider_id . '/' . sha1(microtime()) . '.jpg';
                Storage::disk('s3')->put($media_file, $p, 'public');

                $media = new Media;
                $media->url = $media_file;
                $media->save();

                $place_media = new \App\Models\Hotels\HotelsMedias;
                $place_media->hotels_id = $pwm->id;
                $place_media->medias_id = $media->id;
                $place_media->save();
            }
            echo count($photos);
        }
        echo '<br />';

        $pwm->media_done = 1;
        $pwm->save();
    }
}

function getRestaurantsMediaPerCities() {
    $places_without_media = \App\Models\Restaurants\Restaurants::whereNull('media_done')
            ->orderBy('id', 'ASC')
            ->take(5)
            ->get();

    foreach ($places_without_media AS $pwm) {
        if (time() % 6 == 0) {
            $json = file_get_contents('http://db.travooo.com/public/restaurants/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 1) {
            $json = file_get_contents('http://db.travooodev.com/public/restaurants/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 2) {
            $json = file_get_contents('http://db.travoooapi.com/public/restaurants/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 3) {
            $json = file_get_contents('http://db.travoooapi.net/public/restaurants/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 4) {
            $json = file_get_contents('http://db2.travoooapi.net/public/restaurants/media/go/' . $pwm->provider_id);
        } elseif (time() % 6 == 5) {
            $json = file_get_contents('http://db2.travoooapi.com/public/restaurants/media/go/' . $pwm->provider_id);
        }

        $photos = unserialize($json);

        echo $pwm->provider_id . ' ';
        if (is_array($photos)) {
            foreach ($photos AS $p) {
                $media_file = 'restaurants_media/' . $pwm->provider_id . '/' . sha1(microtime()) . '.jpg';
                Storage::disk('s3')->put($media_file, $p, 'public');

                $media = new Media;
                $media->url = $media_file;
                $media->save();

                $place_media = new \App\Models\Restaurants\RestaurantsMedias;
                $place_media->restaurants_id = $pwm->id;
                $place_media->medias_id = $media->id;
                $place_media->save();
            }
            echo count($photos);
        }
        echo '<br />';

        $pwm->media_done = 1;
        $pwm->save();
    }
}
